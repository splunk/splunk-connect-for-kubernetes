version: 2
jobs:
  build_test:
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
      GOPATH: /home/circleci/go
      KUBECONFIG: /home/circleci/.kube/config
      KUBERNETES_VERSION: v1.15.2
      MINIKUBE_HOME: /home/circleci
      MINIKUBE_VERSION: v1.2.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      SKAFFOLD_VERSION: v0.33.0
      GO111MODULE: "on"
      CI_SPLUNK_VERSION: "8.0.3"
      CI_SPLUNK_FILENAME: splunk-8.0.3-a6754d8441bf-linux-2.6-amd64.deb
      CI_SPLUNK_HOST: 127.0.0.1
      CI_SPLUNK_PORT: 8089
      CI_SPLUNK_USERNAME: admin
      CI_SPLUNK_HEC_TOKEN: a6b5e77f-d5f6-415a-bd43-930cecb12959
      CI_SPLUNK_HEC_TOKEN_PERF: a6b5e77f-d5f6-415a-bd43-930cecb12959
      CI_SPLUNK_PASSWORD: helloworld
      CI_HEC_PROTOCOL: http
      CI_INDEX_EVENTS: circleci_events
      CI_INDEX_OBJECTS: circleci_objects
      CI_INDEX_METRICS: circleci_metrics
      CI_DATAGEN_IMAGE: rock1017/log-generator:latest
      #CI_RUBY_VERSION: 2.7.2, populated from CircleCI project config
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Splunk
          command: |
            cd /tmp && wget -O $CI_SPLUNK_FILENAME 'https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version='$CI_SPLUNK_VERSION'&product=splunk&filename='$CI_SPLUNK_FILENAME'&wget=true'
            sudo dpkg -i $CI_SPLUNK_FILENAME
            # Set user seed
            hashed_pwd=$(sudo /opt/splunk/bin/splunk hash-passwd $CI_SPLUNK_PASSWORD)
            sudo tee /opt/splunk/etc/system/local/user-seed.conf > /dev/null << EOF
            [user_info]
            USERNAME = $CI_SPLUNK_USERNAME
            HASHED_PASSWORD = $hashed_pwd
            EOF
            # Add delete capability to admin role
            sudo tee -a /opt/splunk/etc/system/local/authorize.conf > /dev/null << EOF
            [role_admin]
            delete_by_keyword = enabled
            EOF
            # start Splunk
            sudo /opt/splunk/bin/splunk start --accept-license --answer-yes --no-prompt
            # Enable HEC services
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable
            # Create new HEC token
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d "name=splunk_hec_token&token=$CI_SPLUNK_HEC_TOKEN" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http
            # Enable HEC new-token
            sudo /opt/splunk/bin/splunk http-event-collector enable -name splunk_hec_token -uri https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            # Disable SSL for HEC new-token
            sudo /opt/splunk/bin/splunk http-event-collector update -uri https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT -enable-ssl 0 -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            # Setup Indexes
            sudo /opt/splunk/bin/splunk add index $CI_INDEX_EVENTS -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            sudo /opt/splunk/bin/splunk add index $CI_INDEX_OBJECTS -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            sudo /opt/splunk/bin/splunk add index $CI_INDEX_METRICS -datatype metric -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            sudo /opt/splunk/bin/splunk add index ns-anno -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            sudo /opt/splunk/bin/splunk add index pod-anno -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            sudo /opt/splunk/bin/splunk add index default-events -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            sudo /opt/splunk/bin/splunk http-event-collector update -uri https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT -name splunk_hec_token -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -index default-events -indexes default-events,$CI_INDEX_METRICS,$CI_INDEX_OBJECTS,$CI_INDEX_EVENTS,ns-anno,pod-anno
            # Restart Splunk
            sudo /opt/splunk/bin/splunk restart --accept-license --answer-yes --no-prompt
      - run:
          name: Install and Start minikube
          command: |
            # Install Kubectl
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config
            # Install Minikube
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64
            chmod +x minikube
            sudo mv minikube /usr/local/bin/
            # Start Minikube and Wait
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4098 --kubernetes-version=${KUBERNETES_VERSION}
            export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'
            until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
              sleep 1;
            done 
      - run:
          name: Install dependencies
          command: |
            curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
            pyenv global 3.6.5
            pip install --upgrade pip
            pip install -r test/requirements.txt
      - run:
          name: Lint helm charts
          command: |
            .circleci/lint.sh
      - run:
          name: Build SCK artifacts
          command: |
            .circleci/build_sck_artifacts.sh
      - run:
          name: Update configurables for unit test
          command: |
            export CI_SPLUNK_HEC_HOST=$(hostname -i)
            export CI_SPLUNK_HEC_HOST_PERF=$(hostname -i)
            source /home/circleci/.bash_profile
            rvm install $CI_RUBY_VERSION
            rvm use $CI_RUBY_VERSION
            .circleci/update_sck_config.sh
      - run:
          name: Deploy k8s connector
          command: |
            .circleci/deploy_connector.sh
      - run:
          name: Deploy log generator
          command: |
            docker pull rock1017/log-generator:latest && kubectl apply -f test/test_setup.yaml
            sleep 90
      - run:
          name: Run functional tests
          command: |
            export CI_SPLUNK_HEC_HOST=$(hostname -i)
            pyenv global 3.6.5
            export PYTHONWARNINGS="ignore:Unverified HTTPS request"
            .circleci/run_functional_tests.sh

workflows:
  version: 2
  build_test:
    jobs:
      - build_test:
          filters:
            branches:
              ignore: 
                - /^release\/.*/
                - main
