apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "splunk-kubernetes-metrics.fullname" . }}
  labels:
    app: {{ template "splunk-kubernetes-metrics.name" . }}
    chart: {{ template "splunk-kubernetes-metrics.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  fluent.conf: |
    # system wide configurations
    <system>
      log_level {{ or .Values.logLevel .Values.global.logLevel | default "info" }}
    </system>

    <source>
      @type udp
      tag raw.metrics.udp
      port 9001
      message_length_limit 100m
      <parse>
        @type jq
        jq 'split("\n") | reduce .[] as $item ({}; ($item | rindex(":")) as $i | .[$item[:$i]] = ($item[$i+1:-2] | tonumber))'
      </parse>
    </source>

    <match raw.metrics.udp>
      @type jq
      jq {{ include "splunk-kubernetes-metrics.jq_filter" . | quote }}
      remove_tag_prefix raw
    </match>

    <match metrics.udp>
      @type splunk_hec
      data_type metric
      metric_name_key metric
      metric_value_key value
      protocol {{ or .Values.splunk.hec.protocol .Values.global.splunk.hec.protocol }}
      {{- with or .Values.splunk.hec.host .Values.global.splunk.hec.host }}
      hec_host {{ . }}
      {{- end }}
      {{- with or .Values.splunk.hec.port .Values.global.splunk.hec.port }}
      hec_port {{ . }}
      {{- end }}
      hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
      host "#{ENV['SPLUNK_HEC_HOST']}"
      {{- with or .Values.splunk.hec.indexName .Values.global.splunk.hec.indexName }}
      index {{ . }}
      {{- end }}
      source ${tag}
      insecure_ssl {{ or .Values.splunk.hec.insecureSSL .Values.global.splunk.hec.insecureSSL | default false }}
      {{- if or .Values.splunk.hec.clientCert .Values.global.splunk.hec.clientCert }}
      client_cert /fluentd/etc/splunk/hec_client_cert
      {{- end }}
      {{- if  or .Values.splunk.hec.clientKey .Values.global.splunk.hec.clientKey }}
      client_key /fluentd/etc/splunk/hec_client_key
      {{- end }}
      {{- if or .Values.splunk.hec.caFile .Values.global.splunk.hec.caFile }}
      ca_file /fluentd/etc/splunk/hec_ca_file
      {{- end }}
      <buffer>
        @type memory
        {{- $limit := .Values.resources.sidecar.limit }}
        chunk_limit_size {{ if $limit.memory }}{{ template "splunk-kubernetes-logging.convert-memory" $limit.memory }}{{ else }}{{ "500m" }}{{ end }}
        chunk_limit_records 100000
        flush_interval 5s
        flush_thread_count 1
        overflow_action block
        retry_max_times 3
      </buffer>
    </match>
