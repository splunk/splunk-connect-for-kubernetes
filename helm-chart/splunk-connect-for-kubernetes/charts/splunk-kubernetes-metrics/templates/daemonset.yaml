apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "splunk-kubernetes-metrics.fullname" . }}
  labels:
    app: {{ template "splunk-kubernetes-metrics.name" . }}
    chart: {{ template "splunk-kubernetes-metrics.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: collector
    engine: fluentd
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: {{ template "splunk-kubernetes-metrics.fullname" . }}
      component: collector
  template:
    metadata:
      name: {{ template "splunk-kubernetes-metrics.fullname" . }}
      labels:
        name: {{ template "splunk-kubernetes-metrics.fullname" . }}
        app: {{ template "splunk-kubernetes-metrics.name" . }}
        chart: {{ template "splunk-kubernetes-metrics.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: collector
        engine: fluentd
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        checksum/config: {{ include (print $.Template.BasePath "/configMap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "splunk-kubernetes-metrics.serviceAccountName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.image.usePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullsecretName}}
      {{- end }}
      containers:
      - name: splunk-fluentd-k8s-metrics
        image: {{ template "splunk-kubernetes-metrics.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: KUBERNETES_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SPLUNK_HEC_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "splunk-kubernetes-metrics.secret" . }}
                key: splunk_hec_token
          {{- if or .Values.splunk.hec.caFile .Values.global.splunk.hec.caFile }}
          - name: SSL_CERT_FILE
            value: /fluentd/etc/splunk/hec_ca_file
          {{- end }}
          {{- if .Values.environmentVar }}
          {{- toYaml .Values.environmentVar | nindent 10 }}
          {{- end }}
        resources:
{{ toYaml .Values.resources.fluent | indent 12 }}
        securityContext:
          runAsNonRoot: false
        volumeMounts:
          - name: conf-configmap
            mountPath: /fluentd/etc
          - name: secrets
            mountPath: /fluentd/etc/splunk
            readOnly: true
        livenessProbe:
          httpGet:
            path: /api/plugins.json
            port: 24220
          initialDelaySeconds: 60
          periodSeconds: 60
        {{- if .Values.global.monitoring_agent_enabled }}
        ports:
        - containerPort: 24220
          name: monitor-agent
          protocol: TCP
        {{- end }}
      volumes:
      - name: conf-configmap
        configMap:
          name: {{ template "splunk-kubernetes-metrics.fullname" . }}
      - name: secrets
        secret:
          secretName: {{ template "splunk-kubernetes-metrics.secret" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
